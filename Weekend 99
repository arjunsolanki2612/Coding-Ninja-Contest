// ques 1 NextMultiple

//code
int nextMultiple(int n, int m) {

    // Write your code here.
    if(m>n){
        return m;
    }

    return m*((n/m)+1);
}
------------------------------------------------------------------------------------------------------------------
//ques 2 FreqSequence

string findFreqsequence(string s) {
    // Write your code here.
    // Make an integer array 'freq' of size '26', and initialize it with '0'.
    vector<int> freq(26, 0);
    
    // Initialize an integer variable 'N' with the 'length of the string'.
    int n = s.length();

    // Initialize an integer variable 'maxFreq' by '0'.
    int maxFreq = 0;

    for (int i = 0; i < n; i++) {

        // Increase the 'freq[S[i] - 'a']' by one.
        freq[s[i] - 'a']++;

        // Set 'maxFreq' to 'max(maxFreq, freq[S[i] - 'a'])'.
        maxFreq = max(maxFreq, freq[s[i] - 'a']);
    }

    // Initialize a string 'answer' with an empty string.
    string answer = "";

    for (int i = 0; i < n; i++) {

        // If 'freq[S[i] - 'a']' is equal to 'maxFreq', then add 'S[i]' at the back of the 'answer'.
        if (freq[s[i] - 'a'] == maxFreq) {
            answer.push_back(s[i]);
        }
    }

    return answer;
}
---------------------------------------------------------------------------------------------------------------------------

//ques 3 How Many Are Anagrams?

vector<int> howManyAreAnagrams(int n, int m, vector<string>& a, vector<string>& b) {
    // Write your code here.
    vector<int>temp;

    unordered_map<string,int>mp;
    for(int i=0;i<n;i++){
        string str = a[i];
        sort(str.begin(),str.end());
        mp[str]++;
    }

    for(int i=0;i<m;i++){
        string st = b[i];
        sort(st.begin(),st.end());
        if(mp.find(st)!=mp.end()){
            temp.push_back(mp[st]);
        }else{
            temp.push_back(0);
        }
    }
    return temp;
}
